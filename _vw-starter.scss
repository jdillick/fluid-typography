//
// VW STARTER KIT
// based on https://github.com/hemminger8/vw-starter-kit
//

// ----------------------------------------------------------------------------
//
//    Variables
//
//    Set the variables below to match your Photoshop file widths (in pixels) and to specify breakpoints based on browser window size.
//
// ----------------------------------------------------------------------------

// base font size must be in pixels!!!
$base-font-size: 16px !default;
$minimum-base-font-size: 13px !default;

// layouts -- the pixel width of the Photoshop file for each layout
$desktop-layout: 1024px !default;
$tablet-layout: 640px !default;
$mobile-layout: 320px !default;

// min max breakpoints -- the browser window size at which the layout should change
$desktop-max: 1250px !default;
$desktop-min: 1024px !default;
$tablet-min: 768px !default;

// Account for difference between 100vw and 100% when scroll bars are included on page.
$body-width-fix: true !default;

// limit fluid typography growth to desktop-max
$use-desktop-max: false !default;

// ----------------------------------------------------------------------------
//
//    strip-units() : convert 14px/14em/etc to (int) 14
//
// ----------------------------------------------------------------------------
@function strip-units($number) {
	@if ($number == null) {

		@return null;

	}

	@return $number / ($number * 0 + 1);
}

// ----------------------------------------------------------------------------
//
//    px2rem() : convert from pixels to rems
//
// ----------------------------------------------------------------------------
@function px2rem($pixels) {
	$pixels                    : strip-units($pixels);
	$unitless-base-font-size   : strip-units($base-font-size);

	@return #{$pixels/$unitless-base-font-size}rem;
}


// ----------------------------------------------------------------------------
//
//    px2em() : convert from pixels to ems, based on the context (inherited font-size in pixels)
//
// ----------------------------------------------------------------------------
@function px2em($pixels, $context: $base-font-size) {
	$pixels    : strip-units($pixels);
	$context   : strip-units($context);

	@return #{$pixels/$context}em;
}

// ----------------------------------------------------------------------------
//
//    px2vw() : used to calculate vw font size so as to match Photoshop (or similar) design files.
//
//    Example usage:
//
// 		$base-font-size: 16px;
//
// 		html {
// 			font-size: $base-font-size;
//
// 			// set font-size to scale until reach max width of the site
// 			@media screen and (max-width: $desktop-max) {
// 				font-size: px2vw($base-font-size, $desktop-layout);
// 			}
//
// 			// font size reset to 16px at the tablet design layout width
// 			@media screen and (max-width: $tablet-max) {
// 				font-size: px2vw($base-font-size, $tablet-layout);
// 			}
//
// 			// font size reset to 16px at the mobile design layout width
// 			@media screen and (max-width: $mobile-max) {
// 				font-size: px2vw($base-font-size, $mobile-layout);
// 			}
// 		}
//
// ----------------------------------------------------------------------------
@function px2vw($font-size-px, $layout-size-px) {
	$font-size-px     : strip-units($font-size-px);
	$layout-size-px   : strip-units($layout-size-px);

	@return ($font-size-px / $layout-size-px) * 100vw;
}

// ----------------------------------------------------------------------------
//
// 	vw-base() - set base font-size values in vws for each breakpoint
//
// ----------------------------------------------------------------------------
@mixin vw-base {
	$tablet-max: $desktop-min - 1px;
	$mobile-max: $tablet-min - 1px;

	@if ($body-width-fix) {
		@media screen {
			width: 100vw;
			margin-left: calc((100% - 100vw) / 2);
			overflow-x: hidden;
		}
	}

	// set font-size to scale until reach max width of the site
	@if ($use-desktop-max) {
		font-size: $base-font-size * ($desktop-max/$desktop-layout);

		@media screen and (max-width: $desktop-max) {
			font-size: px2vw($base-font-size, $desktop-layout);
		}
	}
	else {
		// don't contrain the growth of the base font-size
		font-size: px2vw($base-font-size, $desktop-layout);
	}

	// font size reset to 16px at the tablet design layout width
	@media screen and (max-width: $tablet-max) {
		font-size: px2vw($base-font-size, $tablet-layout);
	}

	// font size reset to 16px at the mobile design layout width
	@media screen and (max-width: $mobile-max) {
		font-size: px2vw($base-font-size, $mobile-layout);
	}
}

// ----------------------------------------------------------------------------
//
// 	font-size-breakpoint() - calculate min/max font size breakpoints (for specific components)
//
// 	Example usage:
//
// 		blockquote {
// 			font-size: px2rem(17); // scaling down from a base size of 17px
//
// 			// when font-size shrinks to 12px, set the CSS to 12px to stop
// 			// further scaling
// 			@media (max-width: font-size-breakpoint(12px, $desktop-layout, 17px)) {
// 				font-size: 12px;
// 			}
// 		}
//
// ----------------------------------------------------------------------------
@function font-size-breakpoint($font-size-limit-px, $layout-size-px, $font-size-px: $base-font-size) {
	@return (($font-size-limit-px / $font-size-px) * $layout-size-px);
}

// ----------------------------------------------------------------------------
//
// minimum-base-font-size-mq() - create media query to set max-width to limit
// 	$font-size-start (viewed at $layout-width) to no smaller than $font-size-limit.
//
//	In other words: If your base font size is 16px at a desktop layout of 1600px,
//	and you want to prevent it from shrinking below 14px, this will create a media query to do so.
//
// 	Example usage:
// 	html {
// 		@include minimum-base-font-size-mq($font-size-start: 16px, $font-size-limit: 14px, $layout-width: $desktop-layout);
// 	}
//
// ----------------------------------------------------------------------------
@mixin minimum-base-font-size-mq($font-size-start: 16px, $font-size-limit: 14px, $layout-width: $desktop-layout) {
	@media (max-width: font-size-breakpoint($font-size-limit, $desktop-layout, $font-size-start)) {
		font-size: font-size-breakpoint($font-size-limit, $base-font-size, $font-size-start);
	}
}

// ----------------------------------------------------------------------------
//
//	vw-base-font-range() - create font-size that will vary between to viewport widths
//	ranging from the maximum font-size ($base-font-size by default) and the minimum font-size
//	($minimum-base-font-size by default).
//
//	y = mx + b
//
// ----------------------------------------------------------------------------
@mixin vw-base-font-range($view-width-max, $view-width-min, $min-font-size: $base-font-size, $min-font-size: $minimum-base-font-size) {
	$m: (strip-units($base-font-size) - strip-units($minimum-base-font-size)) / (strip-units($view-width-max) - strip-units($view-width-min));
	$b: $m * -1 * $view-width-min + $minimum-base-font-size;
	font-size: calc( #{$m} * 100vw + #{$b} );
}
